{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":76727,"databundleVersionId":9045607,"sourceType":"competition"}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.impute import KNNImputer\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\nimport lightgbm as lgb\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-09T19:41:39.458827Z","iopub.execute_input":"2024-08-09T19:41:39.459941Z","iopub.status.idle":"2024-08-09T19:41:40.676065Z","shell.execute_reply.started":"2024-08-09T19:41:39.459890Z","shell.execute_reply":"2024-08-09T19:41:40.674834Z"},"trusted":true},"execution_count":126,"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s4e8/sample_submission.csv\n/kaggle/input/playground-series-s4e8/train.csv\n/kaggle/input/playground-series-s4e8/test.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**Load Data**","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/playground-series-s4e8/train.csv')\ntest = pd.read_csv('/kaggle/input/playground-series-s4e8/test.csv')\nsample = pd.read_csv('/kaggle/input/playground-series-s4e8/sample_submission.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:14:34.582766Z","iopub.execute_input":"2024-08-09T19:14:34.583979Z","iopub.status.idle":"2024-08-09T19:14:49.917879Z","shell.execute_reply.started":"2024-08-09T19:14:34.583935Z","shell.execute_reply":"2024-08-09T19:14:49.916953Z"},"trusted":true},"execution_count":75,"outputs":[]},{"cell_type":"markdown","source":"**Get column names**","metadata":{}},{"cell_type":"code","source":"original_column_names = df.columns.tolist()\ntest_columns = test.columns.tolist()","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:14:56.041767Z","iopub.execute_input":"2024-08-09T19:14:56.042760Z","iopub.status.idle":"2024-08-09T19:14:56.047351Z","shell.execute_reply.started":"2024-08-09T19:14:56.042724Z","shell.execute_reply":"2024-08-09T19:14:56.046218Z"},"trusted":true},"execution_count":76,"outputs":[]},{"cell_type":"markdown","source":"# Data visualization","metadata":{}},{"cell_type":"code","source":"df.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:14:57.599858Z","iopub.execute_input":"2024-08-09T19:14:57.600638Z","iopub.status.idle":"2024-08-09T19:14:57.628833Z","shell.execute_reply.started":"2024-08-09T19:14:57.600604Z","shell.execute_reply":"2024-08-09T19:14:57.627646Z"},"trusted":true},"execution_count":77,"outputs":[{"execution_count":77,"output_type":"execute_result","data":{"text/plain":"   id class  cap-diameter cap-shape cap-surface cap-color  \\\n0   0     e          8.80         f           s         u   \n1   1     p          4.51         x           h         o   \n2   2     e          6.94         f           s         b   \n3   3     e          3.88         f           y         g   \n4   4     e          5.85         x           l         w   \n5   5     p          4.30         x           t         n   \n6   6     e          9.65         p           y         w   \n7   7     p          4.55         x           e         e   \n8   8     p          7.36         f           h         e   \n9   9     e          6.45         x           t         n   \n\n  does-bruise-or-bleed gill-attachment gill-spacing gill-color  ...  \\\n0                    f               a            c          w  ...   \n1                    f               a            c          n  ...   \n2                    f               x            c          w  ...   \n3                    f               s          NaN          g  ...   \n4                    f               d          NaN          w  ...   \n5                    f               s            c          n  ...   \n6                    f               e            c          k  ...   \n7                    f               a          NaN          y  ...   \n8                    f               x            d          w  ...   \n9                    f               a            d          w  ...   \n\n   stem-root  stem-surface stem-color veil-type veil-color has-ring ring-type  \\\n0        NaN           NaN          w       NaN        NaN        f         f   \n1        NaN             y          o       NaN        NaN        t         z   \n2        NaN             s          n       NaN        NaN        f         f   \n3        NaN           NaN          w       NaN        NaN        f         f   \n4        NaN           NaN          w       NaN        NaN        f         f   \n5        NaN           NaN          w       NaN          n        t         z   \n6        NaN             s          w       NaN        NaN        t         e   \n7        NaN           NaN          y       NaN          w        t         z   \n8          b           NaN          w       NaN        NaN        f         f   \n9        NaN           NaN          e       NaN        NaN        f         f   \n\n  spore-print-color habitat season  \n0               NaN       d      a  \n1               NaN       d      w  \n2               NaN       l      w  \n3               NaN       d      u  \n4               NaN       g      a  \n5               NaN       d      a  \n6               NaN       g      w  \n7               NaN       d      a  \n8               NaN       d      a  \n9               NaN       d      a  \n\n[10 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>class</th>\n      <th>cap-diameter</th>\n      <th>cap-shape</th>\n      <th>cap-surface</th>\n      <th>cap-color</th>\n      <th>does-bruise-or-bleed</th>\n      <th>gill-attachment</th>\n      <th>gill-spacing</th>\n      <th>gill-color</th>\n      <th>...</th>\n      <th>stem-root</th>\n      <th>stem-surface</th>\n      <th>stem-color</th>\n      <th>veil-type</th>\n      <th>veil-color</th>\n      <th>has-ring</th>\n      <th>ring-type</th>\n      <th>spore-print-color</th>\n      <th>habitat</th>\n      <th>season</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>e</td>\n      <td>8.80</td>\n      <td>f</td>\n      <td>s</td>\n      <td>u</td>\n      <td>f</td>\n      <td>a</td>\n      <td>c</td>\n      <td>w</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>w</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>f</td>\n      <td>f</td>\n      <td>NaN</td>\n      <td>d</td>\n      <td>a</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>p</td>\n      <td>4.51</td>\n      <td>x</td>\n      <td>h</td>\n      <td>o</td>\n      <td>f</td>\n      <td>a</td>\n      <td>c</td>\n      <td>n</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>y</td>\n      <td>o</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>t</td>\n      <td>z</td>\n      <td>NaN</td>\n      <td>d</td>\n      <td>w</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>e</td>\n      <td>6.94</td>\n      <td>f</td>\n      <td>s</td>\n      <td>b</td>\n      <td>f</td>\n      <td>x</td>\n      <td>c</td>\n      <td>w</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>s</td>\n      <td>n</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>f</td>\n      <td>f</td>\n      <td>NaN</td>\n      <td>l</td>\n      <td>w</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>e</td>\n      <td>3.88</td>\n      <td>f</td>\n      <td>y</td>\n      <td>g</td>\n      <td>f</td>\n      <td>s</td>\n      <td>NaN</td>\n      <td>g</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>w</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>f</td>\n      <td>f</td>\n      <td>NaN</td>\n      <td>d</td>\n      <td>u</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>e</td>\n      <td>5.85</td>\n      <td>x</td>\n      <td>l</td>\n      <td>w</td>\n      <td>f</td>\n      <td>d</td>\n      <td>NaN</td>\n      <td>w</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>w</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>f</td>\n      <td>f</td>\n      <td>NaN</td>\n      <td>g</td>\n      <td>a</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>p</td>\n      <td>4.30</td>\n      <td>x</td>\n      <td>t</td>\n      <td>n</td>\n      <td>f</td>\n      <td>s</td>\n      <td>c</td>\n      <td>n</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>w</td>\n      <td>NaN</td>\n      <td>n</td>\n      <td>t</td>\n      <td>z</td>\n      <td>NaN</td>\n      <td>d</td>\n      <td>a</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6</td>\n      <td>e</td>\n      <td>9.65</td>\n      <td>p</td>\n      <td>y</td>\n      <td>w</td>\n      <td>f</td>\n      <td>e</td>\n      <td>c</td>\n      <td>k</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>s</td>\n      <td>w</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>t</td>\n      <td>e</td>\n      <td>NaN</td>\n      <td>g</td>\n      <td>w</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7</td>\n      <td>p</td>\n      <td>4.55</td>\n      <td>x</td>\n      <td>e</td>\n      <td>e</td>\n      <td>f</td>\n      <td>a</td>\n      <td>NaN</td>\n      <td>y</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>y</td>\n      <td>NaN</td>\n      <td>w</td>\n      <td>t</td>\n      <td>z</td>\n      <td>NaN</td>\n      <td>d</td>\n      <td>a</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>8</td>\n      <td>p</td>\n      <td>7.36</td>\n      <td>f</td>\n      <td>h</td>\n      <td>e</td>\n      <td>f</td>\n      <td>x</td>\n      <td>d</td>\n      <td>w</td>\n      <td>...</td>\n      <td>b</td>\n      <td>NaN</td>\n      <td>w</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>f</td>\n      <td>f</td>\n      <td>NaN</td>\n      <td>d</td>\n      <td>a</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>9</td>\n      <td>e</td>\n      <td>6.45</td>\n      <td>x</td>\n      <td>t</td>\n      <td>n</td>\n      <td>f</td>\n      <td>a</td>\n      <td>d</td>\n      <td>w</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>e</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>f</td>\n      <td>f</td>\n      <td>NaN</td>\n      <td>d</td>\n      <td>a</td>\n    </tr>\n  </tbody>\n</table>\n<p>10 rows × 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:12:04.998168Z","iopub.execute_input":"2024-08-09T19:12:04.998590Z","iopub.status.idle":"2024-08-09T19:12:10.024788Z","shell.execute_reply.started":"2024-08-09T19:12:04.998561Z","shell.execute_reply":"2024-08-09T19:12:10.023684Z"},"trusted":true},"execution_count":62,"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"id                            0\nclass                         0\ncap-diameter                  4\ncap-shape                    40\ncap-surface              671023\ncap-color                    12\ndoes-bruise-or-bleed          8\ngill-attachment          523936\ngill-spacing            1258435\ngill-color                   57\nstem-height                   0\nstem-width                    0\nstem-root               2757023\nstem-surface            1980861\nstem-color                   38\nveil-type               2957493\nveil-color              2740947\nhas-ring                     24\nring-type                128880\nspore-print-color       2849682\nhabitat                      45\nseason                        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:12:12.062641Z","iopub.execute_input":"2024-08-09T19:12:12.063083Z","iopub.status.idle":"2024-08-09T19:12:12.071965Z","shell.execute_reply.started":"2024-08-09T19:12:12.063049Z","shell.execute_reply":"2024-08-09T19:12:12.070673Z"},"trusted":true},"execution_count":63,"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"id                        int64\nclass                    object\ncap-diameter            float64\ncap-shape                object\ncap-surface              object\ncap-color                object\ndoes-bruise-or-bleed     object\ngill-attachment          object\ngill-spacing             object\ngill-color               object\nstem-height             float64\nstem-width              float64\nstem-root                object\nstem-surface             object\nstem-color               object\nveil-type                object\nveil-color               object\nhas-ring                 object\nring-type                object\nspore-print-color        object\nhabitat                  object\nseason                   object\ndtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"# Data Processing","metadata":{}},{"cell_type":"markdown","source":"**Encoding the data**","metadata":{}},{"cell_type":"code","source":"encode = LabelEncoder()\n\nfor column in df.columns:\n    if df[column].dtype == 'object':\n        df[column] = encode.fit_transform(df[column])\n        \nfor column in test.columns:\n    if test[column].dtype == 'object':\n        test[column] = encode.fit_transform(test[column])\n\ndf.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:15:03.844718Z","iopub.execute_input":"2024-08-09T19:15:03.845806Z","iopub.status.idle":"2024-08-09T19:15:29.990979Z","shell.execute_reply.started":"2024-08-09T19:15:03.845769Z","shell.execute_reply":"2024-08-09T19:15:29.989821Z"},"trusted":true},"execution_count":78,"outputs":[{"execution_count":78,"output_type":"execute_result","data":{"text/plain":"id                        int64\nclass                     int64\ncap-diameter            float64\ncap-shape                 int64\ncap-surface               int64\ncap-color                 int64\ndoes-bruise-or-bleed      int64\ngill-attachment           int64\ngill-spacing              int64\ngill-color                int64\nstem-height             float64\nstem-width              float64\nstem-root                 int64\nstem-surface              int64\nstem-color                int64\nveil-type                 int64\nveil-color                int64\nhas-ring                  int64\nring-type                 int64\nspore-print-color         int64\nhabitat                   int64\nseason                    int64\ndtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"**Handling missed values**","metadata":{}},{"cell_type":"code","source":"imputer = KNNImputer(n_neighbors = 1776)\n\ndf = imputer.fit_transform(df)\ntest = imputer.fit_transform(test)\n\n\nmushroom = pd.DataFrame(df, columns=original_column_names)\ntest_set = pd.DataFrame(test, columns=test_columns)","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:15:33.449643Z","iopub.execute_input":"2024-08-09T19:15:33.450065Z","iopub.status.idle":"2024-08-09T19:15:40.620051Z","shell.execute_reply.started":"2024-08-09T19:15:33.450032Z","shell.execute_reply":"2024-08-09T19:15:40.618884Z"},"trusted":true},"execution_count":79,"outputs":[]},{"cell_type":"code","source":"mushroom.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:15:42.139449Z","iopub.execute_input":"2024-08-09T19:15:42.139829Z","iopub.status.idle":"2024-08-09T19:15:42.248866Z","shell.execute_reply.started":"2024-08-09T19:15:42.139801Z","shell.execute_reply":"2024-08-09T19:15:42.247529Z"},"trusted":true},"execution_count":80,"outputs":[{"execution_count":80,"output_type":"execute_result","data":{"text/plain":"id                      0\nclass                   0\ncap-diameter            0\ncap-shape               0\ncap-surface             0\ncap-color               0\ndoes-bruise-or-bleed    0\ngill-attachment         0\ngill-spacing            0\ngill-color              0\nstem-height             0\nstem-width              0\nstem-root               0\nstem-surface            0\nstem-color              0\nveil-type               0\nveil-color              0\nhas-ring                0\nring-type               0\nspore-print-color       0\nhabitat                 0\nseason                  0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"mushroom.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:15:44.224004Z","iopub.execute_input":"2024-08-09T19:15:44.225775Z","iopub.status.idle":"2024-08-09T19:15:44.272804Z","shell.execute_reply.started":"2024-08-09T19:15:44.225736Z","shell.execute_reply":"2024-08-09T19:15:44.271700Z"},"trusted":true},"execution_count":81,"outputs":[{"execution_count":81,"output_type":"execute_result","data":{"text/plain":"    id  class  cap-diameter  cap-shape  cap-surface  cap-color  \\\n0  0.0    0.0          8.80       53.0         72.0       72.0   \n1  1.0    1.0          4.51       71.0         56.0       64.0   \n2  2.0    0.0          6.94       53.0         72.0       49.0   \n3  3.0    0.0          3.88       53.0         81.0       57.0   \n4  4.0    0.0          5.85       71.0         65.0       74.0   \n\n   does-bruise-or-bleed  gill-attachment  gill-spacing  gill-color  ...  \\\n0                   8.0             44.0          28.0        59.0  ...   \n1                   8.0             44.0          28.0        46.0  ...   \n2                   8.0             75.0          28.0        59.0  ...   \n3                   8.0             70.0          48.0        37.0  ...   \n4                   8.0             47.0          48.0        59.0  ...   \n\n   stem-root  stem-surface  stem-color  veil-type  veil-color  has-ring  \\\n0       38.0          60.0        55.0       22.0        24.0       5.0   \n1       38.0          58.0        47.0       22.0        24.0      18.0   \n2       38.0          51.0        46.0       22.0        24.0       5.0   \n3       38.0          60.0        55.0       22.0        24.0       5.0   \n4       38.0          60.0        55.0       22.0        24.0       5.0   \n\n   ring-type  spore-print-color  habitat  season  \n0       18.0               32.0     25.0     0.0  \n1       39.0               32.0     25.0     3.0  \n2       18.0               32.0     36.0     3.0  \n3       18.0               32.0     25.0     2.0  \n4       18.0               32.0     29.0     0.0  \n\n[5 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>class</th>\n      <th>cap-diameter</th>\n      <th>cap-shape</th>\n      <th>cap-surface</th>\n      <th>cap-color</th>\n      <th>does-bruise-or-bleed</th>\n      <th>gill-attachment</th>\n      <th>gill-spacing</th>\n      <th>gill-color</th>\n      <th>...</th>\n      <th>stem-root</th>\n      <th>stem-surface</th>\n      <th>stem-color</th>\n      <th>veil-type</th>\n      <th>veil-color</th>\n      <th>has-ring</th>\n      <th>ring-type</th>\n      <th>spore-print-color</th>\n      <th>habitat</th>\n      <th>season</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>8.80</td>\n      <td>53.0</td>\n      <td>72.0</td>\n      <td>72.0</td>\n      <td>8.0</td>\n      <td>44.0</td>\n      <td>28.0</td>\n      <td>59.0</td>\n      <td>...</td>\n      <td>38.0</td>\n      <td>60.0</td>\n      <td>55.0</td>\n      <td>22.0</td>\n      <td>24.0</td>\n      <td>5.0</td>\n      <td>18.0</td>\n      <td>32.0</td>\n      <td>25.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>4.51</td>\n      <td>71.0</td>\n      <td>56.0</td>\n      <td>64.0</td>\n      <td>8.0</td>\n      <td>44.0</td>\n      <td>28.0</td>\n      <td>46.0</td>\n      <td>...</td>\n      <td>38.0</td>\n      <td>58.0</td>\n      <td>47.0</td>\n      <td>22.0</td>\n      <td>24.0</td>\n      <td>18.0</td>\n      <td>39.0</td>\n      <td>32.0</td>\n      <td>25.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>6.94</td>\n      <td>53.0</td>\n      <td>72.0</td>\n      <td>49.0</td>\n      <td>8.0</td>\n      <td>75.0</td>\n      <td>28.0</td>\n      <td>59.0</td>\n      <td>...</td>\n      <td>38.0</td>\n      <td>51.0</td>\n      <td>46.0</td>\n      <td>22.0</td>\n      <td>24.0</td>\n      <td>5.0</td>\n      <td>18.0</td>\n      <td>32.0</td>\n      <td>36.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>3.88</td>\n      <td>53.0</td>\n      <td>81.0</td>\n      <td>57.0</td>\n      <td>8.0</td>\n      <td>70.0</td>\n      <td>48.0</td>\n      <td>37.0</td>\n      <td>...</td>\n      <td>38.0</td>\n      <td>60.0</td>\n      <td>55.0</td>\n      <td>22.0</td>\n      <td>24.0</td>\n      <td>5.0</td>\n      <td>18.0</td>\n      <td>32.0</td>\n      <td>25.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>5.85</td>\n      <td>71.0</td>\n      <td>65.0</td>\n      <td>74.0</td>\n      <td>8.0</td>\n      <td>47.0</td>\n      <td>48.0</td>\n      <td>59.0</td>\n      <td>...</td>\n      <td>38.0</td>\n      <td>60.0</td>\n      <td>55.0</td>\n      <td>22.0</td>\n      <td>24.0</td>\n      <td>5.0</td>\n      <td>18.0</td>\n      <td>32.0</td>\n      <td>29.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"X_sub = mushroom.drop(columns=['class'])\nY_sub = mushroom['class']\n\nX_test_sub = test_set.copy()","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:53:56.128360Z","iopub.execute_input":"2024-08-09T19:53:56.129467Z","iopub.status.idle":"2024-08-09T19:53:56.447617Z","shell.execute_reply.started":"2024-08-09T19:53:56.129411Z","shell.execute_reply":"2024-08-09T19:53:56.446452Z"},"trusted":true},"execution_count":136,"outputs":[]},{"cell_type":"markdown","source":"# Testing","metadata":{}},{"cell_type":"code","source":"pipeline = make_pipeline(\nStandardScaler(),\nlgb.LGBMClassifier(n_estimators=1000, num_threads=-1)\n)","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:44:09.874534Z","iopub.execute_input":"2024-08-09T19:44:09.875196Z","iopub.status.idle":"2024-08-09T19:44:09.880139Z","shell.execute_reply.started":"2024-08-09T19:44:09.875154Z","shell.execute_reply":"2024-08-09T19:44:09.878886Z"},"trusted":true},"execution_count":131,"outputs":[]},{"cell_type":"code","source":"pipeline.fit(X_sub, Y_sub)","metadata":{"execution":{"iopub.status.busy":"2024-08-09T19:54:08.386454Z","iopub.execute_input":"2024-08-09T19:54:08.386897Z","iopub.status.idle":"2024-08-09T20:02:22.121951Z","shell.execute_reply.started":"2024-08-09T19:54:08.386862Z","shell.execute_reply":"2024-08-09T20:02:22.120779Z"},"trusted":true},"execution_count":137,"outputs":[{"name":"stdout","text":"[LightGBM] [Info] Number of positive: 1705396, number of negative: 1411549\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.734377 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1230\n[LightGBM] [Info] Number of data points in the train set: 3116945, number of used features: 21\n[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.547137 -> initscore=0.189110\n[LightGBM] [Info] Start training from score 0.189110\n","output_type":"stream"},{"execution_count":137,"output_type":"execute_result","data":{"text/plain":"Pipeline(steps=[('standardscaler', StandardScaler()),\n                ('lgbmclassifier',\n                 LGBMClassifier(n_estimators=1000, num_threads=-1))])","text/html":"<style>#sk-container-id-11 {color: black;background-color: white;}#sk-container-id-11 pre{padding: 0;}#sk-container-id-11 div.sk-toggleable {background-color: white;}#sk-container-id-11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-11 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-11 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-11 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-11 div.sk-item {position: relative;z-index: 1;}#sk-container-id-11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-11 div.sk-item::before, #sk-container-id-11 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-11 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-11 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-11 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-11 div.sk-label-container {text-align: center;}#sk-container-id-11 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-11 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;standardscaler&#x27;, StandardScaler()),\n                (&#x27;lgbmclassifier&#x27;,\n                 LGBMClassifier(n_estimators=1000, num_threads=-1))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-33\" type=\"checkbox\" ><label for=\"sk-estimator-id-33\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;standardscaler&#x27;, StandardScaler()),\n                (&#x27;lgbmclassifier&#x27;,\n                 LGBMClassifier(n_estimators=1000, num_threads=-1))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-34\" type=\"checkbox\" ><label for=\"sk-estimator-id-34\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-35\" type=\"checkbox\" ><label for=\"sk-estimator-id-35\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LGBMClassifier</label><div class=\"sk-toggleable__content\"><pre>LGBMClassifier(n_estimators=1000, num_threads=-1)</pre></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"sub_prediction = pipeline.predict(X_test_sub)","metadata":{"execution":{"iopub.status.busy":"2024-08-09T20:03:08.062282Z","iopub.execute_input":"2024-08-09T20:03:08.063080Z","iopub.status.idle":"2024-08-09T20:05:36.466852Z","shell.execute_reply.started":"2024-08-09T20:03:08.063046Z","shell.execute_reply":"2024-08-09T20:05:36.465545Z"},"trusted":true},"execution_count":138,"outputs":[]},{"cell_type":"code","source":"submission = sample.copy()\nsubmission['class'] = sub_prediction\n\nsubmission.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-08-09T20:06:03.668410Z","iopub.execute_input":"2024-08-09T20:06:03.668796Z","iopub.status.idle":"2024-08-09T20:06:03.707059Z","shell.execute_reply.started":"2024-08-09T20:06:03.668766Z","shell.execute_reply":"2024-08-09T20:06:03.705730Z"},"trusted":true},"execution_count":139,"outputs":[{"execution_count":139,"output_type":"execute_result","data":{"text/plain":"        id  class\n0  3116945    0.0\n1  3116946    0.0\n2  3116947    1.0\n3  3116948    0.0\n4  3116949    0.0\n5  3116950    1.0\n6  3116951    0.0\n7  3116952    0.0\n8  3116953    0.0\n9  3116954    0.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3116945</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3116946</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3116947</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3116948</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3116949</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3116950</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3116951</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>3116952</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>3116953</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>3116954</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"submission.to_csv('submission.csv', index=False)","metadata":{},"execution_count":null,"outputs":[]}]}