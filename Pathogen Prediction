{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9118733,"sourceType":"datasetVersion","datasetId":5495745}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/tyloftin/pathogen-prediction?scriptVersionId=191419009\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-06T15:15:29.940625Z","iopub.execute_input":"2024-08-06T15:15:29.941411Z","iopub.status.idle":"2024-08-06T15:15:29.958591Z","shell.execute_reply.started":"2024-08-06T15:15:29.941332Z","shell.execute_reply":"2024-08-06T15:15:29.95725Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# First set of factors","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/bacdive-bacterial-data/bacteria.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:12.478783Z","iopub.execute_input":"2024-08-06T14:13:12.479221Z","iopub.status.idle":"2024-08-06T14:13:12.501295Z","shell.execute_reply.started":"2024-08-06T14:13:12.479186Z","shell.execute_reply":"2024-08-06T14:13:12.499939Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:13.992606Z","iopub.execute_input":"2024-08-06T14:13:13.99303Z","iopub.status.idle":"2024-08-06T14:13:14.021712Z","shell.execute_reply.started":"2024-08-06T14:13:13.993Z","shell.execute_reply":"2024-08-06T14:13:14.020245Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Check for missing values**","metadata":{}},{"cell_type":"code","source":"df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:15.730396Z","iopub.execute_input":"2024-08-06T14:13:15.730808Z","iopub.status.idle":"2024-08-06T14:13:15.743778Z","shell.execute_reply.started":"2024-08-06T14:13:15.730776Z","shell.execute_reply":"2024-08-06T14:13:15.742618Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Correct the spelling of Antibiotic Resistance column**","metadata":{}},{"cell_type":"code","source":"df.rename(columns={'Anitbiotic Resistance':'Antibiotic Resistance'})","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:17.489675Z","iopub.execute_input":"2024-08-06T14:13:17.490106Z","iopub.status.idle":"2024-08-06T14:13:17.51424Z","shell.execute_reply.started":"2024-08-06T14:13:17.49007Z","shell.execute_reply":"2024-08-06T14:13:17.512625Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Correcting data types**","metadata":{}},{"cell_type":"code","source":"df.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:19.080526Z","iopub.execute_input":"2024-08-06T14:13:19.080908Z","iopub.status.idle":"2024-08-06T14:13:19.090475Z","shell.execute_reply.started":"2024-08-06T14:13:19.08088Z","shell.execute_reply":"2024-08-06T14:13:19.089146Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Using Label Encoding rather than get_dummies to reduce dimensionality**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\nencode = LabelEncoder()\n\ndf['Species'] = encode.fit_transform(df['Species'])\ndf['Genus'] = encode.fit_transform(df['Genus'])\ndf['pH Range'] = encode.fit_transform(df['pH Range'])\n\ndf.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:20.955543Z","iopub.execute_input":"2024-08-06T14:13:20.955942Z","iopub.status.idle":"2024-08-06T14:13:21.546324Z","shell.execute_reply.started":"2024-08-06T14:13:20.955915Z","shell.execute_reply":"2024-08-06T14:13:21.545273Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Splitting data into training and testing**","metadata":{}},{"cell_type":"code","source":"X = df.drop(columns=['Biosafety Level'])\nY = df['Biosafety Level']\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:24.052054Z","iopub.execute_input":"2024-08-06T14:13:24.052485Z","iopub.status.idle":"2024-08-06T14:13:24.230839Z","shell.execute_reply.started":"2024-08-06T14:13:24.052453Z","shell.execute_reply":"2024-08-06T14:13:24.229768Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_train.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:25.821174Z","iopub.execute_input":"2024-08-06T14:13:25.822503Z","iopub.status.idle":"2024-08-06T14:13:25.83411Z","shell.execute_reply.started":"2024-08-06T14:13:25.822451Z","shell.execute_reply":"2024-08-06T14:13:25.832887Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Y_train.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:27.61153Z","iopub.execute_input":"2024-08-06T14:13:27.611936Z","iopub.status.idle":"2024-08-06T14:13:27.620994Z","shell.execute_reply.started":"2024-08-06T14:13:27.611906Z","shell.execute_reply":"2024-08-06T14:13:27.619671Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Model Selection and Testing of first set**","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import precision_score\n\nmodel_one = RandomForestClassifier(random_state=42)\nmodel_one.fit(X_train, Y_train)\n\nprediction_one = model_one.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:31.390475Z","iopub.execute_input":"2024-08-06T14:13:31.390981Z","iopub.status.idle":"2024-08-06T14:13:32.077073Z","shell.execute_reply.started":"2024-08-06T14:13:31.390944Z","shell.execute_reply":"2024-08-06T14:13:32.075766Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"Number of mislabeled points out of a total %d points : %d\"\n      % (X_test.shape[0], (Y_test != prediction_one).sum()))\nprecision = precision_score(Y_test, prediction_one, zero_division=1)\n\nprint(precision)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:13:33.97612Z","iopub.execute_input":"2024-08-06T14:13:33.976599Z","iopub.status.idle":"2024-08-06T14:13:33.992269Z","shell.execute_reply.started":"2024-08-06T14:13:33.976559Z","shell.execute_reply":"2024-08-06T14:13:33.990656Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Second Set of Factors","metadata":{}},{"cell_type":"code","source":"df2 = pd.read_csv('/kaggle/input/bacdive-bacterial-data/bacteria2.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:23:07.339782Z","iopub.execute_input":"2024-08-06T15:23:07.34022Z","iopub.status.idle":"2024-08-06T15:23:07.397268Z","shell.execute_reply.started":"2024-08-06T15:23:07.340177Z","shell.execute_reply":"2024-08-06T15:23:07.396174Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df2.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:23:08.598833Z","iopub.execute_input":"2024-08-06T15:23:08.599948Z","iopub.status.idle":"2024-08-06T15:23:08.613792Z","shell.execute_reply.started":"2024-08-06T15:23:08.599902Z","shell.execute_reply":"2024-08-06T15:23:08.612457Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Get rid of all the missing values**","metadata":{}},{"cell_type":"code","source":"df2.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:23:10.396712Z","iopub.execute_input":"2024-08-06T15:23:10.397575Z","iopub.status.idle":"2024-08-06T15:23:10.411008Z","shell.execute_reply.started":"2024-08-06T15:23:10.39751Z","shell.execute_reply":"2024-08-06T15:23:10.409436Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cleaned = df2.dropna(axis=0)\n\ncleaned.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:23:11.632135Z","iopub.execute_input":"2024-08-06T15:23:11.632645Z","iopub.status.idle":"2024-08-06T15:23:11.652013Z","shell.execute_reply.started":"2024-08-06T15:23:11.632604Z","shell.execute_reply":"2024-08-06T15:23:11.650628Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cleaned.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:23:13.47788Z","iopub.execute_input":"2024-08-06T15:23:13.478304Z","iopub.status.idle":"2024-08-06T15:23:13.491015Z","shell.execute_reply.started":"2024-08-06T15:23:13.478269Z","shell.execute_reply":"2024-08-06T15:23:13.489828Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Get rid of the ranges in the GC content column**","metadata":{}},{"cell_type":"code","source":"cleaned.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:23:15.12248Z","iopub.execute_input":"2024-08-06T15:23:15.122897Z","iopub.status.idle":"2024-08-06T15:23:15.132506Z","shell.execute_reply.started":"2024-08-06T15:23:15.122864Z","shell.execute_reply":"2024-08-06T15:23:15.131101Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**The following function will average the ranges of Gc Content throughout the dataset and therefore giving the column the float data type rather than object**","metadata":{}},{"cell_type":"code","source":"cleaned = cleaned.copy()\n\ndef averaged_gc(value):\n    if '-' in value:\n        lower, upper = value.split('-')\n        return (float(lower) + float(upper)) / 2\n    else:\n        return float(value)\n    \ncleaned['Gc Content'] = cleaned['Gc Content'].astype(str).apply(averaged_gc)\n\ncleaned.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:23:17.005537Z","iopub.execute_input":"2024-08-06T15:23:17.005937Z","iopub.status.idle":"2024-08-06T15:23:17.023755Z","shell.execute_reply.started":"2024-08-06T15:23:17.005907Z","shell.execute_reply":"2024-08-06T15:23:17.022362Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Label Encoding of other columns**","metadata":{}},{"cell_type":"code","source":"cleaned['Species'] = encode.fit_transform(cleaned['Species'])\ncleaned['Biosafety Level'] = encode.fit_transform(cleaned['Biosafety Level'])\ncleaned['Cell Shape'] = encode.fit_transform(cleaned['Cell Shape'])\n\ncleaned.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:23:19.231673Z","iopub.execute_input":"2024-08-06T15:23:19.232072Z","iopub.status.idle":"2024-08-06T15:23:19.265116Z","shell.execute_reply.started":"2024-08-06T15:23:19.23204Z","shell.execute_reply":"2024-08-06T15:23:19.263649Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Check sample sizes of different data**","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\nlevel_counts = cleaned['Biosafety Level'].value_counts()\nplt.figure(figsize=(6, 4))\nplt.pie(level_counts, labels=level_counts.index, autopct='%1.1f%%', colors=['purple', 'green'])\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:23:49.308313Z","iopub.execute_input":"2024-08-06T14:23:49.308811Z","iopub.status.idle":"2024-08-06T14:23:49.484082Z","shell.execute_reply.started":"2024-08-06T14:23:49.308776Z","shell.execute_reply":"2024-08-06T14:23:49.482891Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Split data in training and testing**","metadata":{}},{"cell_type":"code","source":"cleaned.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:22:46.013192Z","iopub.execute_input":"2024-08-06T14:22:46.013643Z","iopub.status.idle":"2024-08-06T14:22:46.023825Z","shell.execute_reply.started":"2024-08-06T14:22:46.013609Z","shell.execute_reply":"2024-08-06T14:22:46.022584Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"bacteria2 = cleaned.dropna()","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:22:50.978616Z","iopub.execute_input":"2024-08-06T14:22:50.979113Z","iopub.status.idle":"2024-08-06T14:22:50.987943Z","shell.execute_reply.started":"2024-08-06T14:22:50.97907Z","shell.execute_reply":"2024-08-06T14:22:50.986679Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_square = bacteria2.drop(columns=['Biosafety Level'])\nY_square = bacteria2['Biosafety Level']\n\nX2_train, X2_test, Y2_train, Y2_test = train_test_split(X_square, Y_square, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:22:52.676272Z","iopub.execute_input":"2024-08-06T14:22:52.677903Z","iopub.status.idle":"2024-08-06T14:22:52.688966Z","shell.execute_reply.started":"2024-08-06T14:22:52.67786Z","shell.execute_reply":"2024-08-06T14:22:52.687599Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Correct the sampling difference from earlier**","metadata":{}},{"cell_type":"code","source":"from imblearn.over_sampling import SMOTE\n\nsmote = SMOTE(random_state=42)\nX2_resampled, Y2_resampled = smote.fit_resample(X2_train, Y2_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:22:58.266903Z","iopub.execute_input":"2024-08-06T14:22:58.267476Z","iopub.status.idle":"2024-08-06T14:22:58.296022Z","shell.execute_reply.started":"2024-08-06T14:22:58.267437Z","shell.execute_reply":"2024-08-06T14:22:58.294734Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(X2_resampled.shape)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:23:00.032658Z","iopub.execute_input":"2024-08-06T14:23:00.033053Z","iopub.status.idle":"2024-08-06T14:23:00.039501Z","shell.execute_reply.started":"2024-08-06T14:23:00.033024Z","shell.execute_reply":"2024-08-06T14:23:00.038303Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model_two = RandomForestClassifier(random_state=2000)\nmodel_two.fit(X2_resampled, Y2_resampled)\n\nprediction_two = model_two.predict(X2_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:57:12.867421Z","iopub.execute_input":"2024-08-06T14:57:12.867836Z","iopub.status.idle":"2024-08-06T14:57:14.044775Z","shell.execute_reply.started":"2024-08-06T14:57:12.867804Z","shell.execute_reply":"2024-08-06T14:57:14.04348Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import classification_report\n\nprint(classification_report(Y2_test,prediction_two))","metadata":{"execution":{"iopub.status.busy":"2024-08-06T14:57:14.093967Z","iopub.execute_input":"2024-08-06T14:57:14.094408Z","iopub.status.idle":"2024-08-06T14:57:14.111051Z","shell.execute_reply.started":"2024-08-06T14:57:14.094369Z","shell.execute_reply":"2024-08-06T14:57:14.109683Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Third set of Factors","metadata":{}},{"cell_type":"code","source":"df3 = pd.read_csv('/kaggle/input/bacdive-bacterial-data/bacteria3.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:40:33.006297Z","iopub.execute_input":"2024-08-06T15:40:33.006799Z","iopub.status.idle":"2024-08-06T15:40:33.033194Z","shell.execute_reply.started":"2024-08-06T15:40:33.006763Z","shell.execute_reply":"2024-08-06T15:40:33.03177Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Get rid of missing data**","metadata":{}},{"cell_type":"code","source":"df3.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:40:34.097295Z","iopub.execute_input":"2024-08-06T15:40:34.098463Z","iopub.status.idle":"2024-08-06T15:40:34.112893Z","shell.execute_reply.started":"2024-08-06T15:40:34.098421Z","shell.execute_reply":"2024-08-06T15:40:34.111233Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df3 = df3.dropna(axis=0)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:40:55.21809Z","iopub.execute_input":"2024-08-06T15:40:55.218536Z","iopub.status.idle":"2024-08-06T15:40:55.227734Z","shell.execute_reply.started":"2024-08-06T15:40:55.218503Z","shell.execute_reply":"2024-08-06T15:40:55.226283Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df3.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:40:36.340552Z","iopub.execute_input":"2024-08-06T15:40:36.340982Z","iopub.status.idle":"2024-08-06T15:40:36.356681Z","shell.execute_reply.started":"2024-08-06T15:40:36.340952Z","shell.execute_reply":"2024-08-06T15:40:36.355355Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Convert data types**","metadata":{}},{"cell_type":"code","source":"df3 = df3.copy()\n\ndef averaged_gc(value):\n    value = value.strip()\n    if '-' in value:\n        parts = value.split('-')\n        if len(parts) == 2:\n            try:\n                lower, upper = parts\n                return (float(lower) + float(upper)) / 2\n            except ValueError:\n                return None\n    elif value.startswith('>'):\n        try:\n            return float(value[1:]) \n        except ValueError:\n            return None\n    elif value.startswith('<'):\n        try:\n            return float(value[1:])\n        except ValueError:\n            return None\n    else:\n        try:\n            return float(value)\n        except ValueError:\n            return None\n\ndf3['Salt Conc.'] = df3['Salt Conc.'].astype(str).apply(averaged_gc)\ndf3['Temp'] = df3['Temp'].astype(str).apply(averaged_gc)\n\ndf3.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:40:37.723133Z","iopub.execute_input":"2024-08-06T15:40:37.724129Z","iopub.status.idle":"2024-08-06T15:40:37.751154Z","shell.execute_reply.started":"2024-08-06T15:40:37.724085Z","shell.execute_reply":"2024-08-06T15:40:37.749456Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df3.head(3)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:34:16.831271Z","iopub.execute_input":"2024-08-06T15:34:16.83174Z","iopub.status.idle":"2024-08-06T15:34:16.84768Z","shell.execute_reply.started":"2024-08-06T15:34:16.831704Z","shell.execute_reply":"2024-08-06T15:34:16.846463Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df3['Species'] = encode.fit_transform(df3['Species'])\ndf3['Biosafety Level'] = encode.fit_transform(df3['Biosafety Level'])\ndf3['Gram Stain'] = encode.fit_transform(df3['Gram Stain'])\n\ndf3.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:40:40.849124Z","iopub.execute_input":"2024-08-06T15:40:40.849567Z","iopub.status.idle":"2024-08-06T15:40:40.872041Z","shell.execute_reply.started":"2024-08-06T15:40:40.849533Z","shell.execute_reply":"2024-08-06T15:40:40.870548Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Split the dataset**","metadata":{}},{"cell_type":"code","source":"X_cubed = df3.drop(columns=['Biosafety Level'])\nY_cubed = df3['Biosafety Level']\n\nX3_train, X3_test, Y3_train, Y3_test = train_test_split(X_cubed, Y_cubed, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:43:32.27889Z","iopub.execute_input":"2024-08-06T15:43:32.279301Z","iopub.status.idle":"2024-08-06T15:43:32.291546Z","shell.execute_reply.started":"2024-08-06T15:43:32.279268Z","shell.execute_reply":"2024-08-06T15:43:32.290024Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Balance the oversampling**","metadata":{}},{"cell_type":"code","source":"X3_resampled, Y3_resampled = smote.fit_resample(X3_train, Y3_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:43:33.412857Z","iopub.execute_input":"2024-08-06T15:43:33.413332Z","iopub.status.idle":"2024-08-06T15:43:33.430224Z","shell.execute_reply.started":"2024-08-06T15:43:33.413241Z","shell.execute_reply":"2024-08-06T15:43:33.429076Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Run the model**","metadata":{}},{"cell_type":"code","source":"model_three = RandomForestClassifier(random_state=42)\nmodel_three.fit(X3_resampled, Y3_resampled)\n\nprediction_three = model_three.predict(X3_test)\n\nprint(classification_report(Y3_test,prediction_three))","metadata":{"execution":{"iopub.status.busy":"2024-08-06T15:43:44.593471Z","iopub.execute_input":"2024-08-06T15:43:44.593907Z","iopub.status.idle":"2024-08-06T15:43:45.470773Z","shell.execute_reply.started":"2024-08-06T15:43:44.593872Z","shell.execute_reply":"2024-08-06T15:43:45.469607Z"},"trusted":true},"execution_count":null,"outputs":[]}]}